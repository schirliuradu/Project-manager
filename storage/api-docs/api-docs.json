{
    "openapi": "3.0.0",
    "info": {
        "title": "Project Manager OpenApi Documentation",
        "description": "Project Manager OpenApi Documentation",
        "contact": {
            "email": "schirliuradu@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost/",
            "description": "Project Manager API Server"
        }
    ],
    "paths": {
        "/api/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Login and get jwt token..",
                "description": "Endpoint which logs user in and returns jwt tokens.",
                "operationId": "login",
                "requestBody": {
                    "description": "Login Request",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Project"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Content."
                    }
                }
            }
        },
        "/api/projects": {
            "get": {
                "tags": [
                    "Projects"
                ],
                "summary": "Get project list",
                "description": "Endpoint which retrieves list of paginated projects.",
                "operationId": "getProjects",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/pageParameter"
                    },
                    {
                        "$ref": "#/components/parameters/perPageParameter"
                    },
                    {
                        "$ref": "#/components/parameters/sortByParameter"
                    },
                    {
                        "$ref": "#/components/parameters/withClosedParameter"
                    },
                    {
                        "$ref": "#/components/parameters/onlyClosedParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Project"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found."
                    },
                    "422": {
                        "description": "Unprocessable Content."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Projects"
                ],
                "summary": "Add new project.",
                "description": "Endpoint which adds new project.",
                "operationId": "addProject",
                "requestBody": {
                    "description": "Add Project Request",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddProjectRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Project"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable Content."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/projects/{project}": {
            "get": {
                "tags": [
                    "Projects"
                ],
                "summary": "Get single project by id",
                "description": "Endpoint which retrieves single project by id..",
                "operationId": "getProject",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/project"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Project"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found."
                    },
                    "422": {
                        "description": "Unprocessable Content."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Projects"
                ],
                "summary": "Update existing project.",
                "description": "Endpoint which updates already existing project.",
                "operationId": "updateProject",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/project"
                    }
                ],
                "requestBody": {
                    "description": "Update Project Request",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateProjectRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Project"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found."
                    },
                    "422": {
                        "description": "Unprocessable Content."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/projects/{project}/{action}": {
            "patch": {
                "tags": [
                    "Projects"
                ],
                "summary": "Update existing project status.",
                "description": "Endpoint which updates already existing project status.",
                "operationId": "updateProjectStatus",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/project"
                    },
                    {
                        "$ref": "#/components/parameters/action"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad request."
                    },
                    "401": {
                        "description": "Unauthorized."
                    },
                    "404": {
                        "description": "Resource not found."
                    },
                    "422": {
                        "description": "Unprocessable Content."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/projects/{project}/tasks": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Get project task list",
                "description": "Endpoint which retrieves list of paginated tasks related to given project.",
                "operationId": "getProjectTasks",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/project"
                    },
                    {
                        "$ref": "#/components/parameters/pageParameter"
                    },
                    {
                        "$ref": "#/components/parameters/perPageParameter"
                    },
                    {
                        "$ref": "#/components/parameters/sortByParameter"
                    },
                    {
                        "$ref": "#/components/parameters/withClosedParameter"
                    },
                    {
                        "$ref": "#/components/parameters/onlyClosedParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Task"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found."
                    },
                    "422": {
                        "description": "Unprocessable Content."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Add new task to existing project.",
                "description": "Endpoint which adds new task to an existing project.",
                "operationId": "addTaskToProject",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/project"
                    }
                ],
                "requestBody": {
                    "description": "Add Task To Project Request",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddTaskToProjectRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Task"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request."
                    },
                    "401": {
                        "description": "Unauthorized."
                    },
                    "404": {
                        "description": "Resource not found."
                    },
                    "422": {
                        "description": "Unprocessable Content."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/projects/{project}/tasks/{task}": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Get single project task by id",
                "description": "Endpoint which retrieves single project task by id.",
                "operationId": "getProjectTask",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/project"
                    },
                    {
                        "$ref": "#/components/parameters/task"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Task"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found."
                    },
                    "422": {
                        "description": "Unprocessable Content."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Update existing project task.",
                "description": "Endpoint which updates already existing project task.",
                "operationId": "updateProjectTask",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/project"
                    },
                    {
                        "$ref": "#/components/parameters/task"
                    }
                ],
                "requestBody": {
                    "description": "Update Project Task Request",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateProjectTaskRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Task"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found."
                    },
                    "422": {
                        "description": "Unprocessable Content."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/projects/{project}/tasks/{task}/{action}": {
            "patch": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Update existing project task status.",
                "description": "Endpoint which updates already existing project task status.",
                "operationId": "updateProjectTaskStatus",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/project"
                    },
                    {
                        "$ref": "#/components/parameters/task"
                    },
                    {
                        "$ref": "#/components/parameters/taskStatusUpdateAction"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad request."
                    },
                    "401": {
                        "description": "Unauthorized."
                    },
                    "404": {
                        "description": "Resource not found."
                    },
                    "422": {
                        "description": "Unprocessable Content."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Login": {
                "properties": {
                    "id": {
                        "type": "string",
                        "example": "0056844c-afa2-406b-9989-d49c7e79bc3a"
                    },
                    "first_name": {
                        "type": "string",
                        "example": "John"
                    },
                    "last_name": {
                        "type": "string",
                        "example": "Doe"
                    }
                },
                "type": "object"
            },
            "AddProjectRequest": {
                "properties": {
                    "title": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "description": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AddTaskToProjectRequest": {
                "properties": {
                    "title": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "description": {
                        "type": "string"
                    },
                    "assignee": {
                        "type": "string",
                        "example": "0056844c-afa2-406b-9989-d49c7e79bc3a"
                    },
                    "difficulty": {
                        "$ref": "#/components/schemas/DifficultyEnum"
                    },
                    "priority": {
                        "$ref": "#/components/schemas/PriorityEnum"
                    }
                },
                "type": "object"
            },
            "LoginRequest": {
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UpdateProjectRequest": {
                "properties": {
                    "title": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "description": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UpdateProjectTaskRequest": {
                "properties": {
                    "title": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "description": {
                        "type": "string"
                    },
                    "assignee": {
                        "type": "string",
                        "example": "0056844c-afa2-406b-9989-d49c7e79bc3a"
                    },
                    "difficulty": {
                        "$ref": "#/components/schemas/DifficultyEnum"
                    },
                    "priority": {
                        "$ref": "#/components/schemas/PriorityEnum"
                    }
                },
                "type": "object"
            },
            "DifficultyEnum": {
                "description": "Task difficulty..",
                "type": "string",
                "enum": [
                    "1",
                    "2",
                    "3",
                    "5",
                    "8",
                    "D",
                    "T"
                ]
            },
            "PriorityEnum": {
                "description": "Task priority.",
                "type": "string",
                "enum": [
                    "low",
                    "medium",
                    "high",
                    "very high"
                ]
            },
            "SortingValues": {
                "type": "string",
                "enum": [
                    "alpha_desc",
                    "alpha_asc",
                    "create",
                    "update"
                ]
            },
            "StatusEnum": {
                "description": "Project status values.",
                "type": "string",
                "enum": [
                    "open",
                    "blocked",
                    "closed"
                ]
            },
            "Project": {
                "properties": {
                    "id": {
                        "type": "string",
                        "example": "0056844c-afa2-406b-9989-d49c7e79bc3a"
                    },
                    "slug": {
                        "type": "string",
                        "example": "0056844c-afa2-406b-9989-d49c7e79bc3a-lorem-ipsum"
                    },
                    "title": {
                        "type": "string",
                        "example": "Lorem ipsum"
                    },
                    "description": {
                        "type": "string",
                        "example": "Dolor sit amet consecteur"
                    },
                    "status": {
                        "$ref": "#/components/schemas/StatusEnum"
                    },
                    "tasks_count": {
                        "type": "string",
                        "example": "Total tasks count, both closed and open"
                    },
                    "completed_tasks_count": {
                        "type": "string",
                        "example": "Completed tasks count."
                    }
                },
                "type": "object"
            },
            "Task": {
                "properties": {
                    "id": {
                        "type": "string",
                        "example": "0056844c-afa2-406b-9989-d49c7e79bc3b"
                    },
                    "slug": {
                        "type": "string",
                        "example": "0056844c-afa2-406b-9989-d49c7e79bc3b-lorem-ipsum"
                    },
                    "title": {
                        "type": "string",
                        "example": "Lorem ipsum"
                    },
                    "description": {
                        "type": "string",
                        "example": "Lorem ipsum description"
                    },
                    "status": {
                        "$ref": "#/components/schemas/StatusEnum"
                    },
                    "priority": {
                        "$ref": "#/components/schemas/PriorityEnum"
                    },
                    "difficulty": {
                        "$ref": "#/components/schemas/DifficultyEnum"
                    },
                    "assignee": {
                        "$ref": "#/components/schemas/Assignee"
                    }
                },
                "type": "object"
            },
            "Assignee": {
                "properties": {
                    "id": {
                        "type": "string",
                        "example": "0056844c-afa2-406b-9989-d49c7e79bc3a"
                    },
                    "first_name": {
                        "type": "string",
                        "example": "John"
                    },
                    "last_name": {
                        "type": "string",
                        "example": "Doe"
                    }
                },
                "type": "object"
            },
            "User": {
                "properties": {
                    "email": {
                        "type": "string",
                        "example": "johndoe@test.com"
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    }
                },
                "type": "object"
            }
        },
        "parameters": {
            "project": {
                "name": "project",
                "in": "path",
                "description": "Project id",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "task": {
                "name": "task",
                "in": "path",
                "description": "Task id",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "pageParameter": {
                "name": "page",
                "in": "query",
                "description": "Page",
                "required": true,
                "schema": {
                    "type": "integer"
                }
            },
            "perPageParameter": {
                "name": "perPage",
                "in": "query",
                "description": "Per page items",
                "required": true,
                "schema": {
                    "type": "integer"
                }
            },
            "sortByParameter": {
                "name": "sortBy",
                "in": "query",
                "description": "Results sorting options.",
                "required": true,
                "schema": {
                    "type": "string",
                    "enum": [
                        "alpha_desc",
                        "alpha_asc",
                        "create",
                        "update"
                    ]
                }
            },
            "withClosedParameter": {
                "name": "withClosed",
                "in": "query",
                "description": "Parameter through which require both open and closed projects.",
                "required": false,
                "schema": {
                    "type": "integer",
                    "enum": [
                        0,
                        1
                    ]
                }
            },
            "onlyClosedParameter": {
                "name": "onlyClosed",
                "in": "query",
                "description": "Parameter through which require only closed projects.",
                "required": false,
                "schema": {
                    "type": "integer",
                    "enum": [
                        0,
                        1
                    ]
                }
            },
            "action": {
                "name": "action",
                "in": "path",
                "description": "Project status update action",
                "required": true,
                "schema": {
                    "type": "string",
                    "enum": [
                        "open",
                        "close"
                    ]
                }
            },
            "taskStatusUpdateAction": {
                "name": "action",
                "in": "path",
                "description": "Project task status update action",
                "required": true,
                "schema": {
                    "type": "string",
                    "enum": [
                        "open",
                        "block",
                        "close"
                    ]
                }
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Projects",
            "description": "API Endpoints of Projects"
        }
    ]
}